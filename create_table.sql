CREATE TABLE BOOK
(
    ISBN    CHAR(13)    NOT NULL,
    Title   VARCHAR(256)     NOT NULL,
    Summary VARCHAR(100)    NOT NULL,
    Language VARCHAR(15)    NOT NULL,
    Price   INT     NOT NULL,
    Is_borrowed   INT    NOT NULL,
    Page    INT     NOT NULL,
    Library VARCHAR(15) NOT NULL,
    Floor  INT     NOT NULL,
    Shelf_number INT NOT NULL,
    PRIMARY KEY (ISBN)
);

CREATE TABLE ACCOUNT
(
    ID      VARCHAR(15)     NOT NULL,
    Password    VARCHAR(64)     NOT NULL,
    Name    VARCHAR(15)     NOT NULL,
    Email   VARCHAR(30)     NOT NULL,
    Phone   VARCHAR(15),
    PRIMARY KEY (ID)
);

CREATE TABLE RATING
(
    Rating        INT               NOT NULL,
    Review        VARCHAR(1000),
    Book_ID       char(13)          NOT NULL,
    Account_ID    VARCHAR(15)       NOT NULL,
    PRIMARY KEY (Book_ID, Account_ID),
    FOREIGN KEY (Book_ID) REFERENCES BOOK (ISBN) ON DELETE CASCADE,
    FOREIGN KEY (Account_ID) REFERENCES Account (ID) ON DELETE CASCADE
);

CREATE TABLE ADMIN
(
    ID      VARCHAR(15)     NOT NULL,
    Password    VARCHAR(64)     NOT NULL,
    Name    VARCHAR(15)     NOT NULL,
    Email   VARCHAR(30)     NOT NULL,
    Phone   VARCHAR(15),
    PRIMARY KEY (ID)
);

CREATE TABLE GENRE
(
    ID     VARCHAR(15)     NOT NULL,
    Genre  VARCHAR(128),
    PRIMARY KEY (ID)
);

CREATE TABLE PUBLISHER
(
    ID  VARCHAR(15)     NOT NULL,
    Name    VARCHAR(50)     NOT NULL,
    Address     VARCHAR(30)     NOT NULL,
    PRIMARY KEY (ID)
);

CREATE TABLE TRANSLATOR
(
    ID  VARCHAR(15)     NOT NULL,
    Name    VARCHAR(15)     NOT NULL,
    Language     VARCHAR(15)     NOT NULL,
    PRIMARY KEY (ID)
);

CREATE TABLE AUTHOR
(
    ID   VARCHAR(15)     NOT NULL,
    Name    VARCHAR(15)     NOT NULL,
    Birth_year  DATE    NOT NULL,
    Death_year  DATE,
    Nationality VARCHAR(15)     NOT NULL,
    PRIMARY KEY (ID)
);

CREATE TABLE BORROW
(
    Borrow_date DATE    NOT NULL,
    Return_date DATE    NOT NULL,
    Account_ID VARCHAR(15) NOT NULL,
    Book_ID CHAR(13) NOT NULL,
    PRIMARY KEY (Account_ID, Book_ID),
    FOREIGN KEY (Account_ID) REFERENCES ACCOUNT(ID),
    FOREIGN KEY (Book_ID) REFERENCES BOOK (ISBN)
);

CREATE TABLE BELONG
(
    Genre_ID VARCHAR(15) NOT NULL,
    Book_ID CHAR(13) NOT NULL,
    PRIMARY KEY (Genre_ID, Book_ID),
    FOREIGN KEY (Genre_ID) REFERENCES GENRE(ID),
    FOREIGN KEY (Book_ID) REFERENCES BOOK (ISBN)
);

CREATE TABLE MANAGES
(
    Admin_ID VARCHAR(15) NOT NULL,
    Book_ID CHAR(13) NOT NULL,
    PRIMARY KEY (Admin_ID, Book_ID),
    FOREIGN KEY (Admin_ID) REFERENCES ADMIN(ID),
    FOREIGN KEY (Book_ID) REFERENCES BOOK (ISBN)
);

CREATE TABLE PUBLISHED_BY
(
    Pub_ID VARCHAR(15) NOT NULL,
    Book_ID CHAR(13) NOT NULL,
    PRIMARY KEY (Pub_ID, Book_ID),
    FOREIGN KEY (Pub_ID) REFERENCES PUBLISHER(ID),
    FOREIGN KEY (Book_ID) REFERENCES BOOK (ISBN)
);

CREATE TABLE TRANSLATED
(
    Translator_ID VARCHAR(15) NOT NULL,
    Book_ID CHAR(13) NOT NULL,
    PRIMARY KEY (Translator_ID, Book_ID),
    FOREIGN KEY (Translator_ID) REFERENCES TRANSLATOR(ID),
    FOREIGN KEY (Book_ID) REFERENCES BOOK (ISBN)
);

CREATE TABLE AUTHORED
(
    Author_ID VARCHAR(15) NOT NULL,
    Book_ID CHAR(13) NOT NULL,
    PRIMARY KEY (Author_ID, Book_ID),
    FOREIGN KEY (Author_ID) REFERENCES AUTHOR(ID) ON DELETE CASCADE,
    FOREIGN KEY (Book_ID) REFERENCES BOOK (ISBN)
);
